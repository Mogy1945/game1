import Head from 'next/head'
import Image from 'next/image'
import { Inter } from '@next/font/google'
import styles from '../styles/Home.module.css'

const inter = Inter({ subsets: ['latin'] })

// 管理者設定 //
const squareSettings = {
  row: 10, //行
  column: 20, //列
};
// 管理者設定 //

export default function Home() {

  return (
    <>
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <div className={styles.endDisplay}>
        <p>RESET</p>
      </div>
      <div className={styles.pointDisplay}>
        <span>残り...</span>
        <p>15</p>
      </div>
      <div className={styles.gameContainer}>
        <div className={styles.gamePrevBox}>
          <div className={styles.gameManual}>
            <div className={styles.manualBox}>
              <p>始め方</p>
              <ol>
                <li>「遊び方」を読んでください。</li>
                <li>難易度を選択してください。</li>
                <li>「ゲームスタート」をクリックするとはじまります。</li>
              </ol>
            </div>
            <div className={styles.manualBox}>
              <p>遊び方</p>
              <ol>
                <li>
                  キーボードの右左ボタンで<span className={styles.playerColor}>機体</span>が動きます
                </li>
                <li>
                  キーボードの<span className={styles.playerColor}>「Z」</span>ボタンで<span className={styles.playerColor}>ミサイル</span>を放ちます
                </li>
                <li>
                  <span className={styles.enemyColor}>インベーダー</span>が<span className={styles.playerColor}>機体</span>にあたったら負け
                </li>
                <li>
                  <span className={styles.enemyColor}>インベーダー</span>が<span className={styles.playerColor}>プレイヤーのいる行</span>まで到着しても負け
                </li>
                <li>
                  <span className={styles.enemyColor}>インベーダー</span>を<span className={styles.playerColor}>15体撃ち落としたら</span>勝ち
                </li>
              </ol>
            </div>
          </div>
          <div className={styles.gameSettings}>
            <select name={styles.level} id={styles.levelSelected}>
              <option value="">難易度を選択してください。</option>
              <option value="easy" className={styles.easyColor}>Easy</option>
              <option value="normal" className={styles.normalColor}>Normal</option>
              <option value="hard" className={styles.hardColor}>Hard</option>
              <option value="legend" className={styles.legendColor}>Legend</option>
            </select>
          </div>
          <div className={`${styles.gameStarter} ${styles.disabled}`}>
            <p className={styles.gameStartBtn} disabled="true">ゲームスタート</p>
          </div>
          <div className={styles.gameController}>
            <div className={styles.wideBox}>
              <span className={styles.left} data-way="left"></span>
              <span className={styles.right} data-way="right"></span>
            </div>
          </div>
        </div>

        <table className={styles.squareTable}>
          {
            (function () {
              const tbody = [];
              let td_num = 0;
              for (let i = 1; i <= squareSettings.row; i++) {
                const tr = [];
                const td = [];
                for (let i = 1; i <= squareSettings.column; i++) {
                  if ((i + td_num) === (squareSettings.row * squareSettings.column)) {
                    td.push(<td key={i + td_num} className={`${styles.square} ${styles.player}`} data-num={i + td_num}></td>);
                  } else {
                    td.push(<td key={i + td_num} className={styles.square} data-num={i + td_num}></td>);
                  }
                  if (i === squareSettings.column) {
                    td_num += squareSettings.column;
                  }
                }
                if (i === squareSettings.row) {
                  tr.push(<tr key={i} className={styles.endGameBox}>{td}</tr>);
                } else {
                  tr.push(<tr key={i}>{td}</tr>);
                }
                tbody.push(tr)

              }
              return <tbody>{tbody}</tbody>;


            }())
          }
        </table>
      </div>
    </>
  )
}
